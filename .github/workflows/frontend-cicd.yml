name: Loan management Frontend CI/CD Pipeline

on:
  push:
    branches:
      - release
  workflow_dispatch: # Allow manual triggers

permissions:
  contents: read
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full git history for commit information      - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
          node-version: "20"
          cache: "npm"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci --silent
        continue-on-error: false

      - name: Check Node.js and npm versions
        run: |
          echo "🔍 Checking versions..."
          node -v
          npm -v
          echo "📊 System info:"
          echo "OS: ${{ runner.os }}"
          echo "Architecture: ${{ runner.arch }}"

      - name: Verify Vite installation
        run: |
          echo "⚡ Verifying Vite installation..."
          npx vite --version || (echo "❌ Vite not found" && exit 1)
          npm ls vite || echo "⚠️ Vite not in dependencies"

      - name: Build project
        run: |
          echo "🔨 Building project for production..."
          npm run build:production
        env:
          NODE_ENV: production
          CI: true
        continue-on-error: false

      - name: Verify build output
        run: |
          echo "✅ Verifying build output..."
          ls -la dist/ || echo "⚠️ No dist directory found"
          echo "📊 Build size:"
          du -sh dist/ || echo "⚠️ Cannot calculate build size"

      - name: Copy source code to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.FRONTEND_SERVER_HOST }}
          username: ${{ secrets.FRONTEND_SERVER_USER }}
          password: ${{ secrets.FRONTEND_SERVER_PASSWORD }}
          source: "./*"
          target: "/root/DAKL/FE"
          rm: true

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.FRONTEND_SERVER_HOST }}
          username: ${{ secrets.FRONTEND_SERVER_USER }}
          password: ${{ secrets.FRONTEND_SERVER_PASSWORD }}
          port: 22
          timeout: 300s
          script: |
            cd /root/DAKL/FE
            echo "🛑 Stopping existing containers..."
            sudo docker compose down --remove-orphans || true
            echo "🧹 Cleaning up old images..."
            sudo docker system prune -f || true
            echo "🚀 Building and starting new containers..."
            sudo docker compose up --build -d
            echo "✅ Deployment completed"
            sudo docker compose ps
